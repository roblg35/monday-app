{"ast":null,"code":"var _jsxFileName = \"/Users/gaines/code/monday/welcome-apps/apps/quickstart-fullstack-react-node/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport Board from \"./Board\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8pOQg4bYhYNZkqOY5N1Ptz4qLvs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","Board","jsxDEV","_jsxDEV","monday","App","_s","context","setContext","execute","listen","res","data","attentionBoxText","user","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gaines/code/monday/welcome-apps/apps/quickstart-fullstack-react-node/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport Board from \"./Board\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n\nconst App = () => {\n  const [context, setContext] = useState();\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAO,oCAAoC;AAC3C;AACA,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;AAE1B,MAAMM,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA;IACAM,MAAM,CAACK,OAAO,CAAC,qBAAqB,CAAC;;IAErC;IACAL,MAAM,CAACM,MAAM,CAAC,SAAS,EAAGC,GAAG,IAAK;MAChCH,UAAU,CAACG,GAAG,CAACC,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAG,2BACvBN,OAAO,GAAGA,OAAO,CAACO,IAAI,CAACC,EAAE,GAAG,eAAe;AAC/C,sEACsE;EAEpE,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA,CAACF,KAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}