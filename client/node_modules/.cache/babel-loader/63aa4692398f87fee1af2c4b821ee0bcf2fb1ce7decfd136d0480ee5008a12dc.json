{"ast":null,"code":"var _jsxFileName = \"/Users/gaines/code/monday/welcome-apps/apps/quickstart-fullstack-react-node/client/src/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyBoards = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    fetch('https://api.monday.com/v2', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjM5NDI0OTkwMSwiYWFpIjoxMSwidWlkIjo2NDQxNTkwNywiaWFkIjoiMjAyNC0wOC0wN1QxNjoxMzozMS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MjQ3NzgxNjcsInJnbiI6InVzZTEifQ.kOtqQcQufGYHlWh8aDYwlEgGuD86rRV_TJ0unU0T5gM'\n      },\n      body: JSON.stringify({\n        query: `\n          query {\n            boards {\n              id\n              name\n            groups {\n                    title\n            id}\n              items_page {\n                items {\n                  id\n                  name\n                  column_values {\n                    id\n                    value\n                    type\n                  }\n                }\n              }\n            }\n          }\n        `\n      })\n    }).then(response => response.json()).then(data => setBoards(data.data.boards)).catch(error => console.error('Error:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: boards.map(board => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [board.name, \" (ID: \", board.id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: board.items_page.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [item.name, \" (ID: \", item.id, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: item.column_values.map(column => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [column.type, \": \", column.value]\n            }, column.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, board.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MyBoards, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n_c = MyBoards;\nexport default MyBoards;\nvar _c;\n$RefreshReg$(_c, \"MyBoards\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyBoards","_s","boards","setBoards","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","catch","error","console","children","map","board","name","id","fileName","_jsxFileName","lineNumber","columnNumber","items_page","items","item","column_values","column","type","value","_c","$RefreshReg$"],"sources":["/Users/gaines/code/monday/welcome-apps/apps/quickstart-fullstack-react-node/client/src/Board.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst MyBoards = () => {\n  const [boards, setBoards] = useState([]);\n\n  useEffect(() => {\n    fetch('https://api.monday.com/v2', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization' : 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjM5NDI0OTkwMSwiYWFpIjoxMSwidWlkIjo2NDQxNTkwNywiaWFkIjoiMjAyNC0wOC0wN1QxNjoxMzozMS4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MjQ3NzgxNjcsInJnbiI6InVzZTEifQ.kOtqQcQufGYHlWh8aDYwlEgGuD86rRV_TJ0unU0T5gM'\n      },\n      body: JSON.stringify({\n        query: `\n          query {\n            boards {\n              id\n              name\n            groups {\n                    title\n            id}\n              items_page {\n                items {\n                  id\n                  name\n                  column_values {\n                    id\n                    value\n                    type\n                  }\n                }\n              }\n            }\n          }\n        `\n      })\n    })\n    .then(response => response.json())\n    .then(data => setBoards(data.data.boards))\n    .catch(error => console.error('Error:', error));\n  }, []);\n\n  return (\n    <div>\n      {boards.map(board => (\n        <div key={board.id}>\n          <h2>{board.name} (ID: {board.id})</h2>\n          <ul>\n            {board.items_page.items.map(item => (\n              <li key={item.id}>\n                <h3>{item.name} (ID: {item.id})</h3>\n                <ul>\n                  {item.column_values.map(column => (\n                    <li key={column.id}>{column.type}: {column.value}</li>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MyBoards;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,2BAA2B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC;IACH,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,SAAS,CAACW,IAAI,CAACA,IAAI,CAACZ,MAAM,CAAC,CAAC,CACzCa,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAAmB,QAAA,EACGhB,MAAM,CAACiB,GAAG,CAACC,KAAK,iBACfrB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,GAAKE,KAAK,CAACC,IAAI,EAAC,QAAM,EAACD,KAAK,CAACE,EAAE,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC3B,OAAA;QAAAmB,QAAA,EACGE,KAAK,CAACO,UAAU,CAACC,KAAK,CAACT,GAAG,CAACU,IAAI,iBAC9B9B,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAAmB,QAAA,GAAKW,IAAI,CAACR,IAAI,EAAC,QAAM,EAACQ,IAAI,CAACP,EAAE,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpC3B,OAAA;YAAAmB,QAAA,EACGW,IAAI,CAACC,aAAa,CAACX,GAAG,CAACY,MAAM,iBAC5BhC,OAAA;cAAAmB,QAAA,GAAqBa,MAAM,CAACC,IAAI,EAAC,IAAE,EAACD,MAAM,CAACE,KAAK;YAAA,GAAvCF,MAAM,CAACT,EAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmC,CACtD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GANEG,IAAI,CAACP,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GAbGN,KAAK,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7DID,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}