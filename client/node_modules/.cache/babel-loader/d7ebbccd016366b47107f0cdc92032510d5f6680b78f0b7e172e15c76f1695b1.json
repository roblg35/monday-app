{"ast":null,"code":"const mondayApiClient = require(\"./monday-api-client\");\nconst {\n  MONDAY_OAUTH_URL\n} = require(\"./constants.js\");\nconst {\n  convertToArrayIfNeeded\n} = require(\"./helpers\");\nconst {\n  initScrollHelperIfNeeded\n} = require(\"./helpers/ui-helpers\");\nconst {\n  initBackgroundTracking\n} = require(\"./services/background-tracking-service\");\nconst {\n  logWarnings\n} = require(\"./helpers/monday-api-helpers\");\nconst EMPTY_ARRAY = [];\nconst STORAGE_SEGMENT_KINDS = {\n  GLOBAL: \"v2\",\n  INSTANCE: \"instance\"\n};\nclass MondayClientSdk {\n  constructor(options = {}) {\n    this._clientId = options.clientId;\n    this._apiToken = options.apiToken;\n    this._apiVersion = options.apiVersion;\n    this.listeners = {};\n    this.setClientId = this.setClientId.bind(this);\n    this.setToken = this.setToken.bind(this);\n    this.setApiVersion = this.setApiVersion.bind(this);\n    this.api = this.api.bind(this);\n    this.listen = this.listen.bind(this);\n    this.get = this.get.bind(this);\n    this.set = this.set.bind(this);\n    this.execute = this.execute.bind(this);\n    this.oauth = this.oauth.bind(this);\n    this._receiveMessage = this._receiveMessage.bind(this);\n    this.storage = {\n      setItem: this.setStorageItem.bind(this),\n      getItem: this.getStorageItem.bind(this),\n      deleteItem: this.deleteStorageItem.bind(this),\n      instance: {\n        setItem: this.setStorageInstanceItem.bind(this),\n        getItem: this.getStorageInstanceItem.bind(this),\n        deleteItem: this.deleteStorageInstanceItem.bind(this)\n      }\n    };\n    window.addEventListener(\"message\", this._receiveMessage, false);\n    if (!options.withoutScrollHelper) initScrollHelperIfNeeded();\n    initBackgroundTracking(this);\n  }\n  setClientId(clientId) {\n    this._clientId = clientId;\n  }\n  setToken(token) {\n    this._apiToken = token;\n  }\n  setApiVersion(apiVersion) {\n    this._apiVersion = apiVersion;\n  }\n  api(query, options = {}) {\n    const params = {\n      query,\n      variables: options.variables\n    };\n    const token = options.token || this._apiToken;\n    const apiVersion = options.apiVersion || this._apiVersion;\n    let responsePromise;\n    if (token) {\n      responsePromise = mondayApiClient.execute(params, token, {\n        apiVersion\n      });\n    } else {\n      responsePromise = this._localApi(\"api\", {\n        params,\n        apiVersion\n      }).then(result => result.data);\n    }\n    return responsePromise.then(logWarnings);\n  }\n  listen(typeOrTypes, callback, params) {\n    const types = convertToArrayIfNeeded(typeOrTypes);\n    const unsubscribes = [];\n    types.forEach(type => {\n      unsubscribes.push(this._addListener(type, callback));\n      this._localApi(\"listen\", {\n        type,\n        params\n      });\n    });\n    return () => {\n      unsubscribes.forEach(unsubscribe => unsubscribe());\n    };\n  }\n  get(type, params) {\n    return this._localApi(\"get\", {\n      type,\n      params\n    });\n  }\n  set(type, params) {\n    return this._localApi(\"set\", {\n      type,\n      params\n    });\n  }\n  execute(type, params) {\n    return this._localApi(\"execute\", {\n      type,\n      params\n    });\n  }\n  track(name, data) {\n    return this.execute(\"track\", {\n      name,\n      data\n    });\n  }\n  oauth(options = {}) {\n    const clientId = options.clientId || this._clientId;\n    if (!clientId) throw new Error(\"clientId is required\");\n    const mondayOauthUrl = options.mondayOauthUrl || MONDAY_OAUTH_URL;\n    const url = `${mondayOauthUrl}?client_id=${clientId}`;\n    window.location = url;\n  }\n  setStorageItem(key, value, options = {}) {\n    return this._localApi(\"storage\", {\n      method: \"set\",\n      key,\n      value,\n      options,\n      segment: STORAGE_SEGMENT_KINDS.GLOBAL\n    });\n  }\n  getStorageItem(key, options = {}) {\n    return this._localApi(\"storage\", {\n      method: \"get\",\n      key,\n      options,\n      segment: STORAGE_SEGMENT_KINDS.GLOBAL\n    });\n  }\n  deleteStorageItem(key, options = {}) {\n    return this._localApi(\"storage\", {\n      method: \"delete\",\n      key,\n      options,\n      segment: STORAGE_SEGMENT_KINDS.GLOBAL\n    });\n  }\n  setStorageInstanceItem(key, value, options = {}) {\n    return this._localApi(\"storage\", {\n      method: \"set\",\n      key,\n      value,\n      options,\n      segment: STORAGE_SEGMENT_KINDS.INSTANCE\n    });\n  }\n  getStorageInstanceItem(key, options = {}) {\n    return this._localApi(\"storage\", {\n      method: \"get\",\n      key,\n      options,\n      segment: STORAGE_SEGMENT_KINDS.INSTANCE\n    });\n  }\n  deleteStorageInstanceItem(key, options = {}) {\n    return this._localApi(\"storage\", {\n      method: \"delete\",\n      key,\n      options,\n      segment: STORAGE_SEGMENT_KINDS.INSTANCE\n    });\n  }\n  _localApi(method, args) {\n    return new Promise((resolve, reject) => {\n      const requestId = this._generateRequestId();\n      const clientId = this._clientId;\n      const pjson = require(\"../package.json\");\n      const version = pjson.version;\n      window.parent.postMessage({\n        method,\n        args,\n        requestId,\n        clientId,\n        version\n      }, \"*\");\n      const removeListener = this._addListener(requestId, data => {\n        removeListener();\n        if (data.errorMessage) {\n          const error = new Error(data.errorMessage);\n          error.data = data.data;\n          reject(error);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n  _receiveMessage(event) {\n    const {\n      method,\n      type,\n      requestId\n    } = event.data;\n    const methodListeners = this.listeners[method] || EMPTY_ARRAY;\n    const typeListeners = this.listeners[type] || EMPTY_ARRAY;\n    const requestIdListeners = this.listeners[requestId] || EMPTY_ARRAY;\n    let listeners = new Set([...methodListeners, ...typeListeners, ...requestIdListeners]);\n    if (listeners) {\n      listeners.forEach(listener => {\n        try {\n          listener(event.data);\n        } catch (err) {\n          console.error(\"Message callback error: \", err);\n        }\n      });\n    }\n  }\n  _addListener(key, callback) {\n    this.listeners[key] = this.listeners[key] || new Set();\n    this.listeners[key].add(callback);\n    return () => {\n      this.listeners[key].delete(callback);\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    };\n  }\n  _generateRequestId() {\n    return Math.random().toString(36).substring(2, 9);\n  }\n  _removeEventListener() {\n    window.removeEventListener(\"message\", this._receiveMessage, false);\n  }\n  _clearListeners() {\n    this.listeners = [];\n  }\n}\nfunction init(options = {}) {\n  return new MondayClientSdk(options);\n}\nmodule.exports = init;","map":{"version":3,"names":["mondayApiClient","require","MONDAY_OAUTH_URL","convertToArrayIfNeeded","initScrollHelperIfNeeded","initBackgroundTracking","logWarnings","EMPTY_ARRAY","STORAGE_SEGMENT_KINDS","GLOBAL","INSTANCE","MondayClientSdk","constructor","options","_clientId","clientId","_apiToken","apiToken","_apiVersion","apiVersion","listeners","setClientId","bind","setToken","setApiVersion","api","listen","get","set","execute","oauth","_receiveMessage","storage","setItem","setStorageItem","getItem","getStorageItem","deleteItem","deleteStorageItem","instance","setStorageInstanceItem","getStorageInstanceItem","deleteStorageInstanceItem","window","addEventListener","withoutScrollHelper","token","query","params","variables","responsePromise","_localApi","then","result","data","typeOrTypes","callback","types","unsubscribes","forEach","type","push","_addListener","unsubscribe","track","name","Error","mondayOauthUrl","url","location","key","value","method","segment","args","Promise","resolve","reject","requestId","_generateRequestId","pjson","version","parent","postMessage","removeListener","errorMessage","error","event","methodListeners","typeListeners","requestIdListeners","Set","listener","err","console","add","delete","size","Math","random","toString","substring","_removeEventListener","removeEventListener","_clearListeners","init","module","exports"],"sources":["/Users/gaines/code/monday/welcome-apps/apps/quickstart-fullstack-react-node/client/node_modules/monday-sdk-js/src/client.js"],"sourcesContent":["const mondayApiClient = require(\"./monday-api-client\");\nconst { MONDAY_OAUTH_URL } = require(\"./constants.js\");\nconst { convertToArrayIfNeeded } = require(\"./helpers\");\nconst { initScrollHelperIfNeeded } = require(\"./helpers/ui-helpers\");\nconst { initBackgroundTracking } = require(\"./services/background-tracking-service\");\nconst { logWarnings } = require(\"./helpers/monday-api-helpers\");\n\nconst EMPTY_ARRAY = [];\n\nconst STORAGE_SEGMENT_KINDS = {\n  GLOBAL: \"v2\",\n  INSTANCE: \"instance\"\n};\n\nclass MondayClientSdk {\n  constructor(options = {}) {\n    this._clientId = options.clientId;\n    this._apiToken = options.apiToken;\n    this._apiVersion = options.apiVersion;\n\n    this.listeners = {};\n\n    this.setClientId = this.setClientId.bind(this);\n    this.setToken = this.setToken.bind(this);\n    this.setApiVersion = this.setApiVersion.bind(this);\n    this.api = this.api.bind(this);\n    this.listen = this.listen.bind(this);\n    this.get = this.get.bind(this);\n    this.set = this.set.bind(this);\n    this.execute = this.execute.bind(this);\n    this.oauth = this.oauth.bind(this);\n    this._receiveMessage = this._receiveMessage.bind(this);\n\n    this.storage = {\n      setItem: this.setStorageItem.bind(this),\n      getItem: this.getStorageItem.bind(this),\n      deleteItem: this.deleteStorageItem.bind(this),\n      instance: {\n        setItem: this.setStorageInstanceItem.bind(this),\n        getItem: this.getStorageInstanceItem.bind(this),\n        deleteItem: this.deleteStorageInstanceItem.bind(this)\n      }\n    };\n\n    window.addEventListener(\"message\", this._receiveMessage, false);\n\n    if (!options.withoutScrollHelper) initScrollHelperIfNeeded();\n\n    initBackgroundTracking(this);\n  }\n\n  setClientId(clientId) {\n    this._clientId = clientId;\n  }\n\n  setToken(token) {\n    this._apiToken = token;\n  }\n\n  setApiVersion(apiVersion) {\n    this._apiVersion = apiVersion;\n  }\n\n  api(query, options = {}) {\n    const params = { query, variables: options.variables };\n    const token = options.token || this._apiToken;\n    const apiVersion = options.apiVersion || this._apiVersion;\n\n    let responsePromise;\n    if (token) {\n      responsePromise = mondayApiClient.execute(params, token, { apiVersion });\n    } else {\n      responsePromise = this._localApi(\"api\", { params, apiVersion }).then(result => result.data);\n    }\n\n    return responsePromise.then(logWarnings);\n  }\n\n  listen(typeOrTypes, callback, params) {\n    const types = convertToArrayIfNeeded(typeOrTypes);\n    const unsubscribes = [];\n\n    types.forEach(type => {\n      unsubscribes.push(this._addListener(type, callback));\n      this._localApi(\"listen\", { type, params });\n    });\n\n    return () => {\n      unsubscribes.forEach(unsubscribe => unsubscribe());\n    };\n  }\n\n  get(type, params) {\n    return this._localApi(\"get\", { type, params });\n  }\n\n  set(type, params) {\n    return this._localApi(\"set\", { type, params });\n  }\n\n  execute(type, params) {\n    return this._localApi(\"execute\", { type, params });\n  }\n\n  track(name, data) {\n    return this.execute(\"track\", { name, data });\n  }\n\n  oauth(options = {}) {\n    const clientId = options.clientId || this._clientId;\n    if (!clientId) throw new Error(\"clientId is required\");\n\n    const mondayOauthUrl = options.mondayOauthUrl || MONDAY_OAUTH_URL;\n\n    const url = `${mondayOauthUrl}?client_id=${clientId}`;\n    window.location = url;\n  }\n\n  setStorageItem(key, value, options = {}) {\n    return this._localApi(\"storage\", { method: \"set\", key, value, options, segment: STORAGE_SEGMENT_KINDS.GLOBAL });\n  }\n\n  getStorageItem(key, options = {}) {\n    return this._localApi(\"storage\", { method: \"get\", key, options, segment: STORAGE_SEGMENT_KINDS.GLOBAL });\n  }\n\n  deleteStorageItem(key, options = {}) {\n    return this._localApi(\"storage\", { method: \"delete\", key, options, segment: STORAGE_SEGMENT_KINDS.GLOBAL });\n  }\n\n  setStorageInstanceItem(key, value, options = {}) {\n    return this._localApi(\"storage\", { method: \"set\", key, value, options, segment: STORAGE_SEGMENT_KINDS.INSTANCE });\n  }\n\n  getStorageInstanceItem(key, options = {}) {\n    return this._localApi(\"storage\", { method: \"get\", key, options, segment: STORAGE_SEGMENT_KINDS.INSTANCE });\n  }\n\n  deleteStorageInstanceItem(key, options = {}) {\n    return this._localApi(\"storage\", { method: \"delete\", key, options, segment: STORAGE_SEGMENT_KINDS.INSTANCE });\n  }\n\n  _localApi(method, args) {\n    return new Promise((resolve, reject) => {\n      const requestId = this._generateRequestId();\n      const clientId = this._clientId;\n      const pjson = require(\"../package.json\");\n      const version = pjson.version;\n\n      window.parent.postMessage({ method, args, requestId, clientId, version }, \"*\");\n      const removeListener = this._addListener(requestId, data => {\n        removeListener();\n        if (data.errorMessage) {\n          const error = new Error(data.errorMessage);\n          error.data = data.data;\n          reject(error);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  _receiveMessage(event) {\n    const { method, type, requestId } = event.data;\n    const methodListeners = this.listeners[method] || EMPTY_ARRAY;\n    const typeListeners = this.listeners[type] || EMPTY_ARRAY;\n    const requestIdListeners = this.listeners[requestId] || EMPTY_ARRAY;\n    let listeners = new Set([...methodListeners, ...typeListeners, ...requestIdListeners]);\n\n    if (listeners) {\n      listeners.forEach(listener => {\n        try {\n          listener(event.data);\n        } catch (err) {\n          console.error(\"Message callback error: \", err);\n        }\n      });\n    }\n  }\n\n  _addListener(key, callback) {\n    this.listeners[key] = this.listeners[key] || new Set();\n    this.listeners[key].add(callback);\n\n    return () => {\n      this.listeners[key].delete(callback);\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    };\n  }\n\n  _generateRequestId() {\n    return Math.random()\n      .toString(36)\n      .substring(2, 9);\n  }\n\n  _removeEventListener() {\n    window.removeEventListener(\"message\", this._receiveMessage, false);\n  }\n  _clearListeners() {\n    this.listeners = [];\n  }\n}\n\nfunction init(options = {}) {\n  return new MondayClientSdk(options);\n}\n\nmodule.exports = init;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}