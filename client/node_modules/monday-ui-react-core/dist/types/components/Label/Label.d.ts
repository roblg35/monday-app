import VibeComponentProps from "../../types/VibeComponentProps";
import "./Label.scss";
declare const LABEL_TYPES: {
    readonly FILL: "fill";
    readonly LINE: "line";
};
declare const LABEL_COLORS: {
    readonly PRIMARY: "primary";
    readonly DARK: "dark";
    readonly NEGATIVE: "negative";
    readonly POSITIVE: "positive";
};
declare type LabelType = typeof LABEL_TYPES[keyof typeof LABEL_TYPES];
declare type LabelColor = typeof LABEL_COLORS[keyof typeof LABEL_COLORS];
interface LabelProps extends VibeComponentProps {
    /**
     * Backward compatibility for props naming - please use className instead
     */
    wrapperClassName?: string;
    /**
     * Class name for an inner text wrapper
     */
    labelClassName?: string;
    kind?: LabelType;
    color?: LabelColor;
    text?: string;
    isAnimationDisabled?: boolean;
    isLegIncluded?: boolean;
}
declare const Label: {
    ({ className, wrapperClassName, labelClassName, kind, color, text, isAnimationDisabled, isLegIncluded }: LabelProps): JSX.Element;
    colors: {
        readonly PRIMARY: "primary";
        readonly DARK: "dark";
        readonly NEGATIVE: "negative";
        readonly POSITIVE: "positive";
    };
    kinds: {
        readonly FILL: "fill";
        readonly LINE: "line";
    };
};
export default Label;
