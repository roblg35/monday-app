import { SIZES } from "../../../constants/sizes";
import { ReactElement } from "react";
import { VibeComponent, VibeComponentProps } from "../../../types";
import { CloseMenuOption } from "./MenuConstants";
import "./Menu.scss";
interface MenuProps extends VibeComponentProps {
    /** Backward compatibility for props naming **/
    classname?: string;
    size?: typeof SIZES[keyof typeof SIZES];
    tabIndex?: number;
    ariaLabel?: string;
    ariaDescribedBy?: string;
    focusOnMount?: boolean;
    isVisible?: boolean;
    onClose?: (option: CloseMenuOption) => void;
    focusItemIndex?: number;
    isSubMenu?: boolean;
    useDocumentEventListeners?: boolean;
    focusItemIndexOnMount?: number;
    shouldScrollMenu?: boolean;
    children?: ReactElement | ReactElement[];
}
declare const Menu: VibeComponent<MenuProps> & {
    isMenu?: boolean;
    supportFocusOnMount?: boolean;
    sizes?: typeof SIZES;
};
export default Menu;
