import{jsx as e}from"react/jsx-runtime";import t,{forwardRef as i,useRef as n,useCallback as s}from"react";import r from"classnames";import o from"../../../hooks/useMergeRefs.js";import{GridKeyboardNavigationContext as a}from"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js";import{useMenuGridItemNavContext as d}from"./useMenuGridItemNavContext.js";import{useFocusGridItemByActiveStatus as c}from"./useFocusGridItemByActiveStatus.js";import{useFocusWithin as l}from"../../../hooks/useFocusWithin.js";import"./MenuGridItem.scss.js";var m=i((function(i,m){var u=i.className,v=i.id,p=i.children,I=i.index,f=i.activeItemIndex,x=void 0===f?-1:f,b=i.closeMenu,g=i.getNextSelectableIndex,h=i.getPreviousSelectableIndex,j=i.setActiveItemIndex,M=i.setSubMenuIsOpenByIndex,S=i.isUnderSubMenu,N=void 0!==S&&S,y=i.disabled,C=void 0!==y&&y,G=i.useDocumentEventListeners,O=void 0!==G&&G,P=n(null),R=o({refs:[m,P]}),w=n(),A=p&&t.Children.only(p);A||console.error("MenuGridItem can accept only a single element as first level child, this element is not valid: ",A);var E=s((function(e){M(I,e),e&&j(I)}),[I,j,M]),F=l({onFocusWithinChange:E}).focusWithinProps;c({wrapperRef:P,childRef:w,activeItemIndex:x,index:I,useDocumentEventListeners:O});var W=d({wrapperRef:R,setActiveItemIndex:j,getPreviousSelectableIndex:h,getNextSelectableIndex:g,activeItemIndex:x,isUnderSubMenu:N,closeMenu:b});return e("section",Object.assign({ref:R,className:r("menu-grid-item--wrapper",u),id:v,tabIndex:-1,role:"grid"},F,{children:e(a.Provider,Object.assign({value:W},{children:t.cloneElement(A,Object.assign(Object.assign({},null==A?void 0:A.props),{disabled:C,ref:w}))}))}))}));Object.assign(m,{isMenuChild:!0,isSelectable:!0});var u=m;export{u as default};
